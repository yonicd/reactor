% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/app_args.R
\name{runApp_args}
\alias{runApp_args}
\alias{golem_args}
\title{Arguments to pass to a Shiny App in a child process}
\usage{
runApp_args(
  appDir = getwd(),
  test_port = httpuv::randomPort(),
  test_ip = getOption("shiny.host", "127.0.0.1"),
  test_path = tempdir()
)

golem_args(
  package_name = "",
  test_port = httpuv::randomPort(),
  test_ip = getOption("shiny.host", "127.0.0.1"),
  test_path = tempdir()
)
}
\arguments{
\item{appDir}{The application to run. Should be one of the following (Default: getwd()):
\itemize{
\item A directory containing server.R, plus, either ui.R or a www directory
that contains the file index.html.
\item A directory containing app.R.
\item An .R file containing a Shiny application, ending with an expression that produces a Shiny app object.
}}

\item{test_port}{integer, port to run the app on, Default: httpuv::randomPort()
Default: getOption("shiny.host", "127.0.0.1")}

\item{test_ip}{The IPv4 address that the application should listen on.}

\item{test_path}{character, Path the child process will have access to on the master, Default: tempdir()}

\item{package_name}{name of the golem package}
}
\value{
character
}
\description{
\itemize{
\item runApp_args: Arguments that populate a \link[shiny:runApp]{runApp} call
that will be run in a child process.
\item golem_args:  Arguments that populate an app run via the golem package.
}

The command is appended predefined commands and sent to a \link[processx:process]{process} object.
}
\examples{

runApp_args()

golem_args()

}
\seealso{
\link[shiny:runApp]{runApp}, \link[processx:process]{process}
}
