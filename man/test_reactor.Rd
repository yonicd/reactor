% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/test.R
\name{test_reactor}
\alias{test_reactor}
\title{Reactor testing Environment}
\usage{
test_reactor(
  expr,
  test_path = tempdir(),
  test_ip = "http://127.0.0.1",
  test_port = 6012,
  test_driver = firefox_driver(test_path = test_path),
  processx_args = runApp_args(test_port, test_path),
  processx_cleanup = TRUE
)
}
\arguments{
\item{expr}{expressions that drive the application}

\item{test_path}{character, path to run the test in. Default: tempdir()}

\item{test_ip}{character, IP address to run the App. Default: 'http://127.0.0.1'}

\item{test_port}{numeric, port to run the App. Default: 6012}

\item{test_driver}{\link[RSelenium:remoteDriver-class]{remoteDriver}, Default: firefox_driver(test_path = test_path)}

\item{processx_args}{list, arguments to pass to temporary session that serves the App. Default: runApp_args(test_ip, test_path)}

\item{processx_cleanup}{logical, cleanup the artifacts created by processx. Default: TRUE}
}
\value{
whereami counter data.frame
}
\description{
Environment which sets up and runs Shiny App tests.
}
\examples{
\dontrun{
if(interactive()){

driver_commands <- quote({

# wait for input$n element to be created
el_n <- reactor::wait(
test_driver = test_driver,
expr = test_driver$client$findElement(using = 'id', value = 'n')
)

# Set input$n to 500
test_driver$client$executeScript(script = 'Shiny.setInputValue("n","500");')

})

hist_counter_good <- reactor::test_reactor(
expr          = driver_commands,
test_driver   = reactor::firefox_driver(),
processx_args = reactor::runApp_args(
appDir = system.file('examples/good_app.R',package = 'reactor')
)
)

reactor::expect_reactivity(object = hist_counter_good, tag = 'hist',count =  2)

hist_counter_bad <- reactor::test_reactor(
expr          = driver_commands,
test_driver   = reactor::firefox_driver(),
processx_args = reactor::runApp_args(
appDir = system.file('examples/bad_app.R',package = 'reactor')
)
)

reactor::expect_reactivity(object = hist_counter_bad, tag = 'hist',count =  2)
 
}
}
}
\seealso{
\code{\link[processx]{process}}
}
